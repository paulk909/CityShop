/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import classes.Customer;
import classes.DBHandler;
import classes.Order;
import classes.OrderLine;
import classes.Product;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author 30211275
 */
public class ViewProduct extends javax.swing.JFrame {

    private Customer loggedInCustomer = new Customer();
    private HashMap<Integer,Product> products;
    private int quantity;
        
    /**
     * Creates new form ViewProduct
     */
    public ViewProduct(Customer c) {
        initComponents();
        
        loggedInCustomer = c;
        
        DefaultListModel<String> categories = new DefaultListModel();
        categories.addElement("Clothing");
        categories.addElement("Footwear");
        
        lstCategories.setModel(categories);               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        btnReturnCustHome = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnViewBasket = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbQuantity = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstCategories = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstProducts = new javax.swing.JList();
        txtMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnReturnCustHome.setText("Return to Customer Home");
        btnReturnCustHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnCustHomeActionPerformed(evt);
            }
        });

        jLabel1.setText("Products");

        btnViewBasket.setText("View Basket");
        btnViewBasket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewBasketActionPerformed(evt);
            }
        });

        jLabel2.setText("Categories");

        jLabel3.setText("Product");

        cmbQuantity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbQuantityActionPerformed(evt);
            }
        });

        jLabel4.setText("Quantity");

        btnAdd.setText("Add to Basket");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lstCategories.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCategoriesValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstCategories);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, lstCategories, org.jdesktop.beansbinding.ELProperty.create("${selectedElement}"), lstProducts, org.jdesktop.beansbinding.BeanProperty.create("selectedElements"));
        bindingGroup.addBinding(binding);

        lstProducts.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstProductsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstProducts);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(103, 103, 103))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnReturnCustHome)
                        .addGap(73, 73, 73)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                        .addComponent(btnViewBasket)
                        .addGap(59, 59, 59))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMessage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addGap(110, 110, 110))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(cmbQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(24, 24, 24))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReturnCustHome)
                    .addComponent(jLabel1)
                    .addComponent(btnViewBasket))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane1))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(txtMessage))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbQuantityActionPerformed

    
    private void lstCategoriesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCategoriesValueChanged
        
        DefaultListModel productsModel = new DefaultListModel();
        
        try {
            DBHandler myDB = new DBHandler();
            products = myDB.LoadProducts();
             for (Map.Entry<Integer, Product> productEntry : products.entrySet())
             {
                 Product p = productEntry.getValue();
                 
                 if (p.getClass().getName().equals("classes."+lstCategories.getSelectedValue()))
                 {
                     productsModel.addElement(p);
                     //System.out.println(p.toString());
                 }                                  
             }             
             lstProducts.setModel(productsModel);
             //System.out.println(p);

        } catch (SQLException ex) {
            Logger.getLogger(ViewProduct.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewProduct.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lstCategoriesValueChanged

    private void lstProductsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstProductsValueChanged
       
       // DefaultListModel prodsModel = new DefaultListModel();
        /*if(lstProducts.getSelectedIndex() != -1)
        {
            //txtMessage.setText("reached");
            cmbQuantity.removeAllItems();        
            
            String selectedProduct = lstProducts.getSelectedValue().toString();
            
            for(Map.Entry<Integer, Product> productEntry : products.entrySet())
            {
                Product currentProduct = productEntry.getValue();
                if(currentProduct.getProductName().equalsIgnoreCase(selectedProduct))
                {
                    for(int i=0; i<=currentProduct.getStockLevel(); i++)
                    {
                        cmbQuantity.addItem(Integer.toString(i));
                    }
                }
            }
        }*/
        
        if(lstProducts.getSelectedIndex() != -1)
        {
      
          //txtMessage.setText("");
          
          cmbQuantity.removeAllItems();
          Product selectedProduct = (Product)lstProducts.getSelectedValue();
          int amountAvailable = selectedProduct.getStockLevel() - loggedInCustomer.findLatestOrder().getQuantityOfProducts(selectedProduct.getProductID());
             //lblStock.setText(Integer.toString(amountAvailable));
               System.out.println("p"+selectedProduct.getStockLevel() +"-"+ loggedInCustomer.findLatestOrder().getQuantityOfProducts(selectedProduct.getProductID()));
          for(int i = 0; i <= amountAvailable; i++)
          {
              cmbQuantity.addItem(String.valueOf(i));
          }
        }
    }//GEN-LAST:event_lstProductsValueChanged

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if(lstProducts.getSelectedIndex() == -1)
        {
            txtMessage.setText("Please select a product first");
        } else
        {
            int quantity = Integer.parseInt(String.valueOf(cmbQuantity.getSelectedItem()));
            if(quantity == 0)
            {
                txtMessage.setText("Please enter a quantity > 0");
            } else
            {
                Product selectedProduct = (Product)lstProducts.getSelectedValue();
                txtMessage.setText("Added to Basket");
                OrderLine newOrderLine = new OrderLine(loggedInCustomer.findLatestOrder(), selectedProduct, quantity);
                loggedInCustomer.findLatestOrder().addOrderLine(newOrderLine);
                
                /*int selectedIndex = lstProducts.getSelectedIndex();
                DefaultListModel model = (DefaultListModel)lstProducts.getModel();
                model.remove(selectedIndex);*/
            }
        }
           
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnReturnCustHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnCustHomeActionPerformed
        CustomerHome ch = new CustomerHome(loggedInCustomer);        
        ch.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnReturnCustHomeActionPerformed

    private void btnViewBasketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewBasketActionPerformed
        Basket vb = new Basket(loggedInCustomer);
        this.dispose();
        vb.setVisible(true);        
    }//GEN-LAST:event_btnViewBasketActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new ViewProduct(loggedInCustomer).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnReturnCustHome;
    private javax.swing.JButton btnViewBasket;
    private javax.swing.JComboBox<String> cmbQuantity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> lstCategories;
    private javax.swing.JList lstProducts;
    private javax.swing.JLabel txtMessage;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
